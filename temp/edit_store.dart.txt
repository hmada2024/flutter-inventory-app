import 'package:flutter/cupertino.dart';
import 'package:flutter/material.dart';
import 'package:greenland_stock/db/address.dart';
import 'package:greenland_stock/db/business.dart';
import 'package:greenland_stock/screens/utils/CustomColors.dart';

class EditStore extends StatefulWidget {
  EditStore(this.store);

  final Business store;
  @override
  _EditStoreState createState() => _EditStoreState();
}

class _EditStoreState extends State<EditStore> {
  @override
  void initState() {
    super.initState();
  }

  final GlobalKey<FormState> _formKey = GlobalKey<FormState>();
  Address updatedAddress = Address();
  String name = "";
  String owner = "";
  String street = "";
  String landmark = "";
  String city = "";
  String state = "";
  String pincode = "";
  String country = "";

  @override
  Widget build(BuildContext context) {
    return AlertDialog(
      title: SingleChildScrollView(
        child: Container(
          height: 350,
          width: MediaQuery.of(context).size.width * 0.7,
          child: SingleChildScrollView(
            child: Form(
              key: _formKey,
              child: Column(
                children: [
                  Padding(
                    padding: const EdgeInsets.only(
                      left: 20,
                      right: 20,
                    ),
                    child: Column(
                      children: [
                        Container(
                          margin: const EdgeInsets.only(top: 5, bottom: 5),
                          child: TextFormField(
                            initialValue: widget.store.name,
                            decoration: InputDecoration(
                                border: OutlineInputBorder(
                                  borderRadius:
                                      BorderRadius.all(Radius.circular(12.0)),
                                ),
                                focusedBorder: OutlineInputBorder(
                                  borderSide: const BorderSide(
                                      color: Colors.grey, width: 2.0),
                                ),
                                labelText: 'Name',
                                hintText: 'Enter Your Name'),
                            validator: (name) {
                              if (name.isEmpty) {
                                return "Must not be empty";
                              } else {
                                this.name = name;
                                return null;
                              }
                            },
                          ),
                        ),
                        Container(
                          margin: const EdgeInsets.only(top: 5, bottom: 5),
                          child: TextFormField(
                            initialValue: widget.store.ownedBy,
                            decoration: InputDecoration(
                                border: OutlineInputBorder(
                                  borderRadius:
                                      BorderRadius.all(Radius.circular(12.0)),
                                ),
                                focusedBorder: OutlineInputBorder(
                                  borderSide: const BorderSide(
                                      color: Colors.grey, width: 2.0),
                                ),
                                labelText: 'Owned By',
                                hintText: 'Enter Owner Name'),
                            validator: (owner) {
                              if (owner.isEmpty) {
                                return "Must not be empty";
                              } else {
                                this.owner = name;
                                return null;
                              }
                            },
                          ),
                        ),
                        Column(
                          mainAxisAlignment: MainAxisAlignment.start,
                          crossAxisAlignment: CrossAxisAlignment.center,
                          children: <Widget>[
                            Padding(
                              padding: EdgeInsets.all(5.0),
                              child: Row(
                                children: <Widget>[
                                  Flexible(
                                    child: TextFormField(
                                      initialValue: widget.store.address.street,
                                      textAlign: TextAlign.center,
                                      maxLines: 3,
                                      decoration: InputDecoration(
                                        labelText: 'Building & Street',
                                        floatingLabelBehavior:
                                            FloatingLabelBehavior.always,
                                        labelStyle: TextStyle(
                                          fontSize: 12.0,
                                          color: CustomColors.black,
                                        ),
                                        contentPadding: EdgeInsets.symmetric(
                                            vertical: 10.0, horizontal: 10.0),
                                        border: OutlineInputBorder(
                                            borderSide: BorderSide(
                                                color:
                                                    CustomColors.lightGreen)),
                                        fillColor: CustomColors.white,
                                        filled: true,
                                      ),
                                      validator: (street) {
                                        if (street.trim().isEmpty) {
                                          return "Enter your Street";
                                        } else {
                                          updatedAddress.street = street.trim();
                                          return null;
                                        }
                                      },
                                    ),
                                  ),
                                ],
                              ),
                            ),
                            Padding(
                              padding: EdgeInsets.all(5.0),
                              child: Row(
                                children: <Widget>[
                                  Flexible(
                                    child: TextFormField(
                                      initialValue:
                                          widget.store.address.landmark,
                                      textAlign: TextAlign.start,
                                      decoration: InputDecoration(
                                        labelText: "Landmark",
                                        floatingLabelBehavior:
                                            FloatingLabelBehavior.always,
                                        labelStyle: TextStyle(
                                          fontSize: 12.0,
                                          color: CustomColors.black,
                                        ),
                                        contentPadding: EdgeInsets.symmetric(
                                            vertical: 3.0, horizontal: 10.0),
                                        border: OutlineInputBorder(
                                            borderSide: BorderSide(
                                                color:
                                                    CustomColors.lightGreen)),
                                        fillColor: CustomColors.white,
                                        filled: true,
                                      ),
                                      validator: (landmark) {
                                        if (landmark.trim() != "") {
                                          updatedAddress.landmark =
                                              landmark.trim();
                                        }
                                        return null;
                                      },
                                    ),
                                  ),
                                ],
                              ),
                            ),
                            Padding(
                              padding: EdgeInsets.all(5.0),
                              child: Row(
                                children: <Widget>[
                                  Flexible(
                                    child: TextFormField(
                                      initialValue: widget.store.address.city,
                                      textAlign: TextAlign.start,
                                      decoration: InputDecoration(
                                        labelText: 'City',
                                        floatingLabelBehavior:
                                            FloatingLabelBehavior.always,
                                        labelStyle: TextStyle(
                                          fontSize: 12.0,
                                          color: CustomColors.black,
                                        ),
                                        contentPadding: EdgeInsets.symmetric(
                                            vertical: 3.0, horizontal: 10.0),
                                        border: OutlineInputBorder(
                                            borderSide: BorderSide(
                                                color:
                                                    CustomColors.lightGreen)),
                                        fillColor: CustomColors.white,
                                        filled: true,
                                      ),
                                      validator: (city) {
                                        if (city.trim().isEmpty) {
                                          return "Enter your City";
                                        } else {
                                          updatedAddress.city = city.trim();
                                          return null;
                                        }
                                      },
                                    ),
                                  ),
                                  Padding(padding: EdgeInsets.only(left: 5)),
                                  Flexible(
                                    child: TextFormField(
                                      initialValue: widget.store.address.state,
                                      textAlign: TextAlign.start,
                                      decoration: InputDecoration(
                                        labelText: 'State',
                                        floatingLabelBehavior:
                                            FloatingLabelBehavior.always,
                                        labelStyle: TextStyle(
                                          fontSize: 12.0,
                                          color: CustomColors.black,
                                        ),
                                        contentPadding: EdgeInsets.symmetric(
                                            vertical: 3.0, horizontal: 10.0),
                                        border: OutlineInputBorder(
                                            borderSide: BorderSide(
                                                color:
                                                    CustomColors.lightGreen)),
                                        fillColor: CustomColors.white,
                                        filled: true,
                                      ),
                                      validator: (state) {
                                        if (state.trim().isEmpty) {
                                          return "Enter Your State";
                                        } else {
                                          updatedAddress.state = state.trim();
                                          return null;
                                        }
                                      },
                                    ),
                                  ),
                                ],
                              ),
                            ),
                            Padding(
                              padding: EdgeInsets.all(5.0),
                              child: Row(
                                children: <Widget>[
                                  Flexible(
                                    child: TextFormField(
                                      initialValue:
                                          widget.store.address.pincode,
                                      textAlign: TextAlign.start,
                                      decoration: InputDecoration(
                                        labelText: 'Pincode',
                                        floatingLabelBehavior:
                                            FloatingLabelBehavior.always,
                                        labelStyle: TextStyle(
                                          fontSize: 12.0,
                                          color: CustomColors.black,
                                        ),
                                        contentPadding: EdgeInsets.symmetric(
                                            vertical: 3.0, horizontal: 10.0),
                                        border: OutlineInputBorder(
                                            borderSide: BorderSide(
                                                color:
                                                    CustomColors.lightGreen)),
                                        fillColor: CustomColors.white,
                                        filled: true,
                                      ),
                                      validator: (pinCode) {
                                        if (pinCode.trim().isEmpty) {
                                          return "Enter Your Pincode";
                                        } else {
                                          updatedAddress.pincode =
                                              pinCode.trim();

                                          return null;
                                        }
                                      },
                                    ),
                                  ),
                                ],
                              ),
                            ),
                            Padding(
                              padding: EdgeInsets.all(5.0),
                              child: Row(
                                children: <Widget>[
                                  Flexible(
                                    child: TextFormField(
                                      initialValue:
                                          widget.store.address.country,
                                      keyboardType: TextInputType.number,
                                      textAlign: TextAlign.start,
                                      decoration: InputDecoration(
                                        labelText: "Country / Region",
                                        floatingLabelBehavior:
                                            FloatingLabelBehavior.always,
                                        labelStyle: TextStyle(
                                          fontSize: 12.0,
                                          color: CustomColors.black,
                                        ),
                                        contentPadding: EdgeInsets.symmetric(
                                            vertical: 3.0, horizontal: 10.0),
                                        border: OutlineInputBorder(
                                            borderSide: BorderSide(
                                                color:
                                                    CustomColors.lightGreen)),
                                        fillColor: CustomColors.white,
                                        filled: true,
                                      ),
                                      validator: (country) {
                                        if (country.trim().isEmpty) {
                                          updatedAddress.country = "India";
                                        } else {
                                          updatedAddress.country =
                                              country.trim();
                                        }
                                        return null;
                                      },
                                    ),
                                  ),
                                ],
                              ),
                            ),
                          ],
                        ),
                        SizedBox(height: 20),
                        ElevatedButton(
                          child: Text('Update'),
                          onPressed: () async {
                            //await _submit();
                          },
                        ),
                      ],
                    ),
                  ),
                ],
              ),
            ),
          ),
        ),
      ),
    );
  }
}
